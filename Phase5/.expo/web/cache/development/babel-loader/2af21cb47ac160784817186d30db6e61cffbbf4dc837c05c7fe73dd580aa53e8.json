{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TaskManager = function TaskManager() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    taskName = _useState4[0],\n    setTaskName = _useState4[1];\n  var addTask = function addTask() {\n    if (taskName.trim() !== '') {\n      var task = {\n        name: taskName,\n        status: 'Pending'\n      };\n      setTasks(function (prevTasks) {\n        return [].concat(_toConsumableArray(prevTasks), [task]);\n      });\n      setTaskName('');\n    }\n  };\n  var updateTaskStatus = function updateTaskStatus(index, status) {\n    setTasks(function (prevTasks) {\n      return prevTasks.map(function (task, i) {\n        return i === index ? _objectSpread(_objectSpread({}, task), {}, {\n          status: status\n        }) : task;\n      });\n    });\n  };\n  var deleteTask = function deleteTask(index) {\n    setTasks(function (prevTasks) {\n      return prevTasks.filter(function (_, i) {\n        return i !== index;\n      });\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"Task Manager\"\n    }), _jsxs(View, {\n      style: styles.taskInputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.taskInput,\n        placeholder: \"Enter task name\",\n        value: taskName,\n        onChangeText: function onChangeText(text) {\n          return setTaskName(text);\n        }\n      }), _jsx(Button, {\n        title: \"Add Task\",\n        onPress: addTask\n      })]\n    }), _jsx(ScrollView, {\n      style: styles.tasksContainer,\n      children: tasks.map(function (task, index) {\n        return _jsxs(View, {\n          style: styles.taskRow,\n          children: [_jsx(Text, {\n            style: styles.taskNumber,\n            children: index + 1\n          }), _jsx(Text, {\n            style: styles.taskName,\n            children: task.name\n          }), _jsxs(View, {\n            style: styles.taskStatusDropdown,\n            children: [_jsx(TouchableOpacity, {\n              style: styles.dropdownButton,\n              children: _jsx(Text, {\n                children: task.status\n              })\n            }), _jsxs(View, {\n              style: styles.dropdownMenu,\n              children: [_jsx(TouchableOpacity, {\n                style: styles.dropdownItem,\n                onPress: function onPress() {\n                  return updateTaskStatus(index, 'Pending');\n                },\n                children: _jsx(Text, {\n                  children: \"Pending\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: styles.dropdownItem,\n                onPress: function onPress() {\n                  return updateTaskStatus(index, 'In Progress');\n                },\n                children: _jsx(Text, {\n                  children: \"In Progress\"\n                })\n              }), _jsx(TouchableOpacity, {\n                style: styles.dropdownItem,\n                onPress: function onPress() {\n                  return updateTaskStatus(index, 'Completed');\n                },\n                children: _jsx(Text, {\n                  children: \"Completed\"\n                })\n              })]\n            })]\n          }), _jsxs(View, {\n            style: styles.taskButtons,\n            children: [_jsx(Button, {\n              title: \"Edit\",\n              onPress: function onPress() {\n                return handleEditTask(index);\n              }\n            }), _jsx(Button, {\n              title: \"Delete\",\n              onPress: function onPress() {\n                return deleteTask(index);\n              }\n            })]\n          })]\n        }, index);\n      })\n    })]\n  });\n};\nvar styles = {\n  container: {\n    flex: 1,\n    backgroundColor: '#202020',\n    padding: 20\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 20\n  },\n  taskInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  taskInput: {\n    flex: 1,\n    height: 40,\n    backgroundColor: '#252525',\n    borderRadius: 8,\n    color: 'white',\n    paddingHorizontal: 10\n  },\n  tasksContainer: {\n    flex: 1\n  },\n  taskRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  taskNumber: {\n    width: 30,\n    marginRight: 10,\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  taskName: {\n    flex: 1,\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  taskStatusDropdown: {\n    width: 120\n  },\n  dropdownButton: {\n    backgroundColor: '#DDDDDD',\n    padding: 10\n  },\n  dropdownMenu: {\n    backgroundColor: '#DDDDDD',\n    marginTop: 5,\n    paddingVertical: 5\n  },\n  dropdownItem: {\n    paddingHorizontal: 10,\n    paddingVertical: 5\n  },\n  taskButtons: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginLeft: 'auto'\n  }\n};\nexport default TaskManager;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","TouchableOpacity","ScrollView","jsx","_jsx","jsxs","_jsxs","TaskManager","_useState","_useState2","_slicedToArray","tasks","setTasks","_useState3","_useState4","taskName","setTaskName","addTask","trim","task","name","status","prevTasks","concat","_toConsumableArray","updateTaskStatus","index","map","i","_objectSpread","deleteTask","filter","_","style","styles","container","children","heading","taskInputContainer","taskInput","placeholder","value","onChangeText","text","title","onPress","tasksContainer","taskRow","taskNumber","taskStatusDropdown","dropdownButton","dropdownMenu","dropdownItem","taskButtons","handleEditTask","flex","backgroundColor","padding","fontSize","fontWeight","color","marginBottom","flexDirection","alignItems","height","borderRadius","paddingHorizontal","width","marginRight","marginTop","paddingVertical","justifyContent","marginLeft"],"sources":["C:/Users/Hassa/OneDrive - Higher Education Commission/mob-app/React Native/react_app/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  Button,\n  TouchableOpacity,\n  ScrollView,\n} from 'react-native';\n\nconst TaskManager = () => {\n  const [tasks, setTasks] = useState([]);\n  const [taskName, setTaskName] = useState('');\n\n  const addTask = () => {\n    if (taskName.trim() !== '') {\n      const task = {\n        name: taskName,\n        status: 'Pending',\n      };\n      setTasks((prevTasks) => [...prevTasks, task]);\n      setTaskName('');\n    }\n  };\n\n  const updateTaskStatus = (index, status) => {\n    setTasks((prevTasks) =>\n      prevTasks.map((task, i) =>\n        i === index ? { ...task, status } : task\n      )\n    );\n  };\n\n  const deleteTask = (index) => {\n    setTasks((prevTasks) =>\n      prevTasks.filter((_, i) => i !== index)\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.heading}>Task Manager</Text>\n      <View style={styles.taskInputContainer}>\n        <TextInput\n          style={styles.taskInput}\n          placeholder=\"Enter task name\"\n          value={taskName}\n          onChangeText={(text) => setTaskName(text)}\n        />\n        <Button title=\"Add Task\" onPress={addTask} />\n      </View>\n      <ScrollView style={styles.tasksContainer}>\n        {tasks.map((task, index) => (\n          <View style={styles.taskRow} key={index}>\n            <Text style={styles.taskNumber}>{index + 1}</Text>\n            <Text style={styles.taskName}>{task.name}</Text>\n            <View style={styles.taskStatusDropdown}>\n              <TouchableOpacity style={styles.dropdownButton}>\n                <Text>{task.status}</Text>\n              </TouchableOpacity>\n              <View style={styles.dropdownMenu}>\n                <TouchableOpacity\n                  style={styles.dropdownItem}\n                  onPress={() => updateTaskStatus(index, 'Pending')}\n                >\n                  <Text>Pending</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={styles.dropdownItem}\n                  onPress={() => updateTaskStatus(index, 'In Progress')}\n                >\n                  <Text>In Progress</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={styles.dropdownItem}\n                  onPress={() => updateTaskStatus(index, 'Completed')}\n                >\n                  <Text>Completed</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n            <View style={styles.taskButtons}>\n              <Button title=\"Edit\" onPress={() => handleEditTask(index)} />\n              <Button\n                title=\"Delete\"\n                onPress={() => deleteTask(index)}\n              />\n            </View>\n          </View>\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = {\n  container: {\n    flex: 1,\n    backgroundColor: '#202020',\n    padding: 20,\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 20,\n  },\n  taskInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  taskInput: {\n    flex: 1,\n    height: 40,\n    backgroundColor: '#252525',\n    borderRadius: 8,\n    color: 'white',\n    paddingHorizontal: 10,\n  },\n  tasksContainer: {\n    flex: 1,\n  },\n  taskRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  taskNumber: {\n    width: 30,\n    marginRight: 10,\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  taskName: {\n    flex: 1,\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n  taskStatusDropdown: {\n    width: 120,\n  },\n  dropdownButton: {\n    backgroundColor: '#DDDDDD',\n    padding: 10,\n  },\n  dropdownMenu: {\n    backgroundColor: '#DDDDDD',\n    marginTop: 5,\n    paddingVertical: 5,\n  },\n  dropdownItem: {\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n  },\n  taskButtons: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginLeft: 'auto',\n  },\n};\n\nexport default TaskManager;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}